<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.8.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.8.0(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Poke Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="2048000.0"/>
    <comp lib="0" loc="(100,140)" name="Clock"/>
    <comp lib="0" loc="(1040,180)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(1140,310)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(1140,330)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(1160,700)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(1180,280)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(1180,810)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(1220,420)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(1240,630)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(1390,60)" name="Splitter">
      <a name="facing" val="west"/>
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(1790,330)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(1810,200)" name="Splitter">
      <a name="fanout" val="7"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(460,140)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="6"/>
    </comp>
    <comp lib="0" loc="(460,260)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="6"/>
    </comp>
    <comp lib="0" loc="(460,380)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(580,300)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="5" loc="(1180,110)" name="7-Segment Display"/>
    <comp lib="5" loc="(1270,740)" name="7-Segment Display"/>
    <comp lib="5" loc="(1290,110)" name="7-Segment Display"/>
    <comp lib="5" loc="(1350,500)" name="7-Segment Display"/>
    <comp lib="5" loc="(1370,740)" name="7-Segment Display"/>
    <comp lib="5" loc="(1450,500)" name="7-Segment Display"/>
    <comp lib="5" loc="(1910,270)" name="7-Segment Display"/>
    <comp lib="5" loc="(2010,270)" name="7-Segment Display"/>
    <comp loc="(1030,180)" name="bcd">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1030,50)" name="bcd">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1120,290)" name="termostat">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1130,410)" name="Binary_to_decimal_converter">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1160,730)" name="bcd">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1160,780)" name="bcd">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1230,590)" name="bcd">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1280,520)" name="bcd">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1530,250)" name="Binary_to_decimal_converter_5_biti">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1780,230)" name="bcd">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1780,290)" name="bcd">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(380,140)" name="Numarator_secunde">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(380,260)" name="Numarator_minute">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(380,380)" name="Numarator_ore">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(800,140)" name="Binary_to_decimal_converter">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(850,280)" name="comparator_2_nr">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(860,390)" name="mux_8_la1">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(900,700)" name="Binary_to_decimal_converter_5_biti">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <wire from="(100,140)" to="(140,140)"/>
    <wire from="(1030,180)" to="(1040,180)"/>
    <wire from="(1030,50)" to="(1390,50)"/>
    <wire from="(1060,110)" to="(1150,110)"/>
    <wire from="(1060,120)" to="(1170,120)"/>
    <wire from="(1060,130)" to="(1160,130)"/>
    <wire from="(1060,140)" to="(1150,140)"/>
    <wire from="(1060,150)" to="(1140,150)"/>
    <wire from="(1060,160)" to="(1130,160)"/>
    <wire from="(1060,170)" to="(1120,170)"/>
    <wire from="(1120,290)" to="(1150,290)"/>
    <wire from="(1120,310)" to="(1140,310)"/>
    <wire from="(1120,330)" to="(1140,330)"/>
    <wire from="(1120,60)" to="(1120,170)"/>
    <wire from="(1120,60)" to="(1200,60)"/>
    <wire from="(1130,410)" to="(1140,410)"/>
    <wire from="(1130,430)" to="(1150,430)"/>
    <wire from="(1130,70)" to="(1130,160)"/>
    <wire from="(1130,70)" to="(1210,70)"/>
    <wire from="(1140,150)" to="(1140,210)"/>
    <wire from="(1140,210)" to="(1200,210)"/>
    <wire from="(1140,410)" to="(1140,470)"/>
    <wire from="(1150,100)" to="(1150,110)"/>
    <wire from="(1150,100)" to="(1180,100)"/>
    <wire from="(1150,140)" to="(1150,200)"/>
    <wire from="(1150,200)" to="(1190,200)"/>
    <wire from="(1150,240)" to="(1150,280)"/>
    <wire from="(1150,280)" to="(1150,290)"/>
    <wire from="(1150,280)" to="(1180,280)"/>
    <wire from="(1150,430)" to="(1150,490)"/>
    <wire from="(1150,680)" to="(1150,870)"/>
    <wire from="(1150,680)" to="(1180,680)"/>
    <wire from="(1150,870)" to="(1420,870)"/>
    <wire from="(1160,130)" to="(1160,190)"/>
    <wire from="(1160,190)" to="(1180,190)"/>
    <wire from="(1160,700)" to="(1160,730)"/>
    <wire from="(1160,780)" to="(1160,810)"/>
    <wire from="(1160,810)" to="(1180,810)"/>
    <wire from="(1170,90)" to="(1170,120)"/>
    <wire from="(1170,90)" to="(1190,90)"/>
    <wire from="(1180,100)" to="(1180,110)"/>
    <wire from="(1180,170)" to="(1180,190)"/>
    <wire from="(1180,630)" to="(1230,630)"/>
    <wire from="(1180,640)" to="(1220,640)"/>
    <wire from="(1180,650)" to="(1210,650)"/>
    <wire from="(1180,660)" to="(1200,660)"/>
    <wire from="(1180,670)" to="(1190,670)"/>
    <wire from="(1180,690)" to="(1390,690)"/>
    <wire from="(1190,170)" to="(1190,200)"/>
    <wire from="(1190,670)" to="(1190,680)"/>
    <wire from="(1190,680)" to="(1330,680)"/>
    <wire from="(1190,90)" to="(1190,110)"/>
    <wire from="(1200,170)" to="(1200,210)"/>
    <wire from="(1200,60)" to="(1200,110)"/>
    <wire from="(1200,660)" to="(1200,670)"/>
    <wire from="(1200,670)" to="(1340,670)"/>
    <wire from="(1200,730)" to="(1200,740)"/>
    <wire from="(1200,730)" to="(1270,730)"/>
    <wire from="(1200,750)" to="(1230,750)"/>
    <wire from="(1200,760)" to="(1250,760)"/>
    <wire from="(1200,770)" to="(1240,770)"/>
    <wire from="(1200,780)" to="(1230,780)"/>
    <wire from="(1200,790)" to="(1210,790)"/>
    <wire from="(1200,800)" to="(1220,800)"/>
    <wire from="(1210,650)" to="(1210,660)"/>
    <wire from="(1210,660)" to="(1350,660)"/>
    <wire from="(1210,70)" to="(1210,110)"/>
    <wire from="(1210,700)" to="(1210,790)"/>
    <wire from="(1210,700)" to="(1300,700)"/>
    <wire from="(1220,420)" to="(1220,430)"/>
    <wire from="(1220,430)" to="(1280,430)"/>
    <wire from="(1220,640)" to="(1220,650)"/>
    <wire from="(1220,650)" to="(1380,650)"/>
    <wire from="(1220,710)" to="(1220,800)"/>
    <wire from="(1220,710)" to="(1290,710)"/>
    <wire from="(1230,590)" to="(1240,590)"/>
    <wire from="(1230,630)" to="(1230,640)"/>
    <wire from="(1230,640)" to="(1370,640)"/>
    <wire from="(1230,720)" to="(1230,750)"/>
    <wire from="(1230,720)" to="(1280,720)"/>
    <wire from="(1230,780)" to="(1230,830)"/>
    <wire from="(1230,830)" to="(1290,830)"/>
    <wire from="(1240,350)" to="(1450,350)"/>
    <wire from="(1240,360)" to="(1460,360)"/>
    <wire from="(1240,370)" to="(1430,370)"/>
    <wire from="(1240,380)" to="(1420,380)"/>
    <wire from="(1240,390)" to="(1410,390)"/>
    <wire from="(1240,400)" to="(1480,400)"/>
    <wire from="(1240,410)" to="(1470,410)"/>
    <wire from="(1240,590)" to="(1240,630)"/>
    <wire from="(1240,770)" to="(1240,820)"/>
    <wire from="(1240,820)" to="(1280,820)"/>
    <wire from="(1250,760)" to="(1250,810)"/>
    <wire from="(1250,810)" to="(1270,810)"/>
    <wire from="(1260,280)" to="(1290,280)"/>
    <wire from="(1260,560)" to="(1290,560)"/>
    <wire from="(1260,570)" to="(1300,570)"/>
    <wire from="(1260,580)" to="(1350,580)"/>
    <wire from="(1260,590)" to="(1360,590)"/>
    <wire from="(1260,600)" to="(1370,600)"/>
    <wire from="(1260,610)" to="(1310,610)"/>
    <wire from="(1260,620)" to="(1320,620)"/>
    <wire from="(1270,100)" to="(1270,190)"/>
    <wire from="(1270,100)" to="(1370,100)"/>
    <wire from="(1270,190)" to="(1300,190)"/>
    <wire from="(1270,730)" to="(1270,740)"/>
    <wire from="(1270,800)" to="(1270,810)"/>
    <wire from="(1280,180)" to="(1290,180)"/>
    <wire from="(1280,430)" to="(1280,520)"/>
    <wire from="(1280,720)" to="(1280,740)"/>
    <wire from="(1280,800)" to="(1280,820)"/>
    <wire from="(1280,90)" to="(1280,180)"/>
    <wire from="(1280,90)" to="(1370,90)"/>
    <wire from="(1290,170)" to="(1290,180)"/>
    <wire from="(1290,250)" to="(1290,280)"/>
    <wire from="(1290,250)" to="(1310,250)"/>
    <wire from="(1290,490)" to="(1290,560)"/>
    <wire from="(1290,490)" to="(1350,490)"/>
    <wire from="(1290,70)" to="(1290,110)"/>
    <wire from="(1290,70)" to="(1370,70)"/>
    <wire from="(1290,710)" to="(1290,740)"/>
    <wire from="(1290,800)" to="(1290,830)"/>
    <wire from="(1300,170)" to="(1300,190)"/>
    <wire from="(1300,480)" to="(1300,570)"/>
    <wire from="(1300,480)" to="(1360,480)"/>
    <wire from="(1300,700)" to="(1300,740)"/>
    <wire from="(1300,80)" to="(1300,110)"/>
    <wire from="(1300,80)" to="(1370,80)"/>
    <wire from="(1310,170)" to="(1310,190)"/>
    <wire from="(1310,190)" to="(1340,190)"/>
    <wire from="(1310,250)" to="(1320,250)"/>
    <wire from="(1310,40)" to="(1310,110)"/>
    <wire from="(1310,40)" to="(1350,40)"/>
    <wire from="(1310,470)" to="(1310,610)"/>
    <wire from="(1310,470)" to="(1380,470)"/>
    <wire from="(1320,460)" to="(1320,620)"/>
    <wire from="(1320,460)" to="(1370,460)"/>
    <wire from="(1320,60)" to="(1320,110)"/>
    <wire from="(1320,60)" to="(1360,60)"/>
    <wire from="(1330,680)" to="(1330,830)"/>
    <wire from="(1330,830)" to="(1390,830)"/>
    <wire from="(1340,110)" to="(1340,190)"/>
    <wire from="(1340,110)" to="(1370,110)"/>
    <wire from="(1340,670)" to="(1340,820)"/>
    <wire from="(1340,820)" to="(1380,820)"/>
    <wire from="(1350,130)" to="(1370,130)"/>
    <wire from="(1350,40)" to="(1350,130)"/>
    <wire from="(1350,490)" to="(1350,500)"/>
    <wire from="(1350,560)" to="(1350,580)"/>
    <wire from="(1350,660)" to="(1350,810)"/>
    <wire from="(1350,810)" to="(1370,810)"/>
    <wire from="(1360,120)" to="(1370,120)"/>
    <wire from="(1360,480)" to="(1360,500)"/>
    <wire from="(1360,560)" to="(1360,590)"/>
    <wire from="(1360,60)" to="(1360,120)"/>
    <wire from="(1370,460)" to="(1370,500)"/>
    <wire from="(1370,560)" to="(1370,600)"/>
    <wire from="(1370,640)" to="(1370,740)"/>
    <wire from="(1370,800)" to="(1370,810)"/>
    <wire from="(1380,470)" to="(1380,500)"/>
    <wire from="(1380,650)" to="(1380,740)"/>
    <wire from="(1380,800)" to="(1380,820)"/>
    <wire from="(1390,50)" to="(1390,60)"/>
    <wire from="(1390,690)" to="(1390,740)"/>
    <wire from="(1390,800)" to="(1390,830)"/>
    <wire from="(140,110)" to="(140,140)"/>
    <wire from="(140,110)" to="(900,110)"/>
    <wire from="(140,140)" to="(140,280)"/>
    <wire from="(140,140)" to="(160,140)"/>
    <wire from="(140,280)" to="(140,400)"/>
    <wire from="(140,280)" to="(160,280)"/>
    <wire from="(140,400)" to="(160,400)"/>
    <wire from="(1400,720)" to="(1400,740)"/>
    <wire from="(1400,720)" to="(1420,720)"/>
    <wire from="(1410,390)" to="(1410,610)"/>
    <wire from="(1410,610)" to="(1470,610)"/>
    <wire from="(1420,380)" to="(1420,600)"/>
    <wire from="(1420,600)" to="(1460,600)"/>
    <wire from="(1420,720)" to="(1420,870)"/>
    <wire from="(1430,370)" to="(1430,590)"/>
    <wire from="(1430,590)" to="(1450,590)"/>
    <wire from="(1450,350)" to="(1450,500)"/>
    <wire from="(1450,560)" to="(1450,590)"/>
    <wire from="(1460,360)" to="(1460,500)"/>
    <wire from="(1460,560)" to="(1460,600)"/>
    <wire from="(1470,410)" to="(1470,500)"/>
    <wire from="(1470,560)" to="(1470,610)"/>
    <wire from="(1480,400)" to="(1480,500)"/>
    <wire from="(1530,250)" to="(1540,250)"/>
    <wire from="(1530,270)" to="(1540,270)"/>
    <wire from="(1540,230)" to="(1540,250)"/>
    <wire from="(1540,230)" to="(1560,230)"/>
    <wire from="(1540,270)" to="(1540,290)"/>
    <wire from="(1540,290)" to="(1560,290)"/>
    <wire from="(160,220)" to="(160,260)"/>
    <wire from="(160,220)" to="(380,220)"/>
    <wire from="(160,340)" to="(160,380)"/>
    <wire from="(160,340)" to="(380,340)"/>
    <wire from="(1780,230)" to="(1810,230)"/>
    <wire from="(1780,290)" to="(1790,290)"/>
    <wire from="(1790,290)" to="(1790,330)"/>
    <wire from="(1810,200)" to="(1810,230)"/>
    <wire from="(1810,260)" to="(1910,260)"/>
    <wire from="(1810,270)" to="(1890,270)"/>
    <wire from="(1810,280)" to="(1890,280)"/>
    <wire from="(1810,290)" to="(1880,290)"/>
    <wire from="(1810,300)" to="(1870,300)"/>
    <wire from="(1810,310)" to="(1850,310)"/>
    <wire from="(1810,320)" to="(1860,320)"/>
    <wire from="(1830,130)" to="(2010,130)"/>
    <wire from="(1830,140)" to="(2020,140)"/>
    <wire from="(1830,150)" to="(1990,150)"/>
    <wire from="(1830,160)" to="(1980,160)"/>
    <wire from="(1830,170)" to="(1970,170)"/>
    <wire from="(1830,180)" to="(2040,180)"/>
    <wire from="(1830,190)" to="(2030,190)"/>
    <wire from="(1850,220)" to="(1850,310)"/>
    <wire from="(1850,220)" to="(1940,220)"/>
    <wire from="(1860,230)" to="(1860,320)"/>
    <wire from="(1860,230)" to="(1930,230)"/>
    <wire from="(1870,300)" to="(1870,360)"/>
    <wire from="(1870,360)" to="(1930,360)"/>
    <wire from="(1880,290)" to="(1880,350)"/>
    <wire from="(1880,350)" to="(1920,350)"/>
    <wire from="(1890,250)" to="(1890,270)"/>
    <wire from="(1890,250)" to="(1920,250)"/>
    <wire from="(1890,280)" to="(1890,340)"/>
    <wire from="(1890,340)" to="(1910,340)"/>
    <wire from="(1910,260)" to="(1910,270)"/>
    <wire from="(1910,330)" to="(1910,340)"/>
    <wire from="(1920,250)" to="(1920,270)"/>
    <wire from="(1920,330)" to="(1920,350)"/>
    <wire from="(1930,230)" to="(1930,270)"/>
    <wire from="(1930,330)" to="(1930,360)"/>
    <wire from="(1940,220)" to="(1940,270)"/>
    <wire from="(1970,170)" to="(1970,360)"/>
    <wire from="(1970,360)" to="(2030,360)"/>
    <wire from="(1980,160)" to="(1980,350)"/>
    <wire from="(1980,350)" to="(2020,350)"/>
    <wire from="(1990,150)" to="(1990,340)"/>
    <wire from="(1990,340)" to="(2010,340)"/>
    <wire from="(2010,130)" to="(2010,270)"/>
    <wire from="(2010,330)" to="(2010,340)"/>
    <wire from="(2020,140)" to="(2020,270)"/>
    <wire from="(2020,330)" to="(2020,350)"/>
    <wire from="(2030,190)" to="(2030,270)"/>
    <wire from="(2030,330)" to="(2030,360)"/>
    <wire from="(2040,180)" to="(2040,270)"/>
    <wire from="(380,140)" to="(450,140)"/>
    <wire from="(380,160)" to="(380,220)"/>
    <wire from="(380,260)" to="(450,260)"/>
    <wire from="(380,280)" to="(380,340)"/>
    <wire from="(380,380)" to="(400,380)"/>
    <wire from="(400,380)" to="(400,700)"/>
    <wire from="(400,380)" to="(430,380)"/>
    <wire from="(400,700)" to="(680,700)"/>
    <wire from="(430,380)" to="(430,490)"/>
    <wire from="(430,380)" to="(460,380)"/>
    <wire from="(430,490)" to="(890,490)"/>
    <wire from="(450,140)" to="(450,170)"/>
    <wire from="(450,140)" to="(460,140)"/>
    <wire from="(450,170)" to="(570,170)"/>
    <wire from="(450,260)" to="(450,530)"/>
    <wire from="(450,260)" to="(460,260)"/>
    <wire from="(450,530)" to="(900,530)"/>
    <wire from="(570,140)" to="(570,170)"/>
    <wire from="(570,140)" to="(580,140)"/>
    <wire from="(580,300)" to="(610,300)"/>
    <wire from="(600,360)" to="(600,430)"/>
    <wire from="(600,360)" to="(860,360)"/>
    <wire from="(600,430)" to="(640,430)"/>
    <wire from="(610,300)" to="(610,390)"/>
    <wire from="(610,300)" to="(630,300)"/>
    <wire from="(610,390)" to="(640,390)"/>
    <wire from="(620,240)" to="(1150,240)"/>
    <wire from="(620,240)" to="(620,280)"/>
    <wire from="(620,280)" to="(620,410)"/>
    <wire from="(620,280)" to="(630,280)"/>
    <wire from="(620,410)" to="(640,410)"/>
    <wire from="(800,160)" to="(810,160)"/>
    <wire from="(800,50)" to="(800,140)"/>
    <wire from="(800,50)" to="(810,50)"/>
    <wire from="(810,160)" to="(810,180)"/>
    <wire from="(850,280)" to="(860,280)"/>
    <wire from="(860,280)" to="(860,360)"/>
    <wire from="(860,390)" to="(880,390)"/>
    <wire from="(880,330)" to="(880,390)"/>
    <wire from="(880,330)" to="(900,330)"/>
    <wire from="(890,280)" to="(890,290)"/>
    <wire from="(890,280)" to="(900,280)"/>
    <wire from="(890,290)" to="(900,290)"/>
    <wire from="(890,310)" to="(890,490)"/>
    <wire from="(890,310)" to="(900,310)"/>
    <wire from="(900,110)" to="(900,280)"/>
    <wire from="(900,410)" to="(900,530)"/>
    <wire from="(900,410)" to="(910,410)"/>
    <wire from="(900,700)" to="(930,700)"/>
    <wire from="(900,720)" to="(900,780)"/>
    <wire from="(900,780)" to="(940,780)"/>
    <wire from="(930,700)" to="(930,730)"/>
    <wire from="(930,730)" to="(940,730)"/>
    <wire from="(970,470)" to="(1140,470)"/>
    <wire from="(970,470)" to="(970,520)"/>
    <wire from="(970,520)" to="(1060,520)"/>
    <wire from="(980,490)" to="(1150,490)"/>
    <wire from="(980,490)" to="(980,590)"/>
    <wire from="(980,590)" to="(1010,590)"/>
  </circuit>
  <vhdl name="Numarator_secunde">LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
USE ieee.std_logic_UNSIGNED.all;

ENTITY Numarator_secunde IS&#13;
  PORT (&#13;
  		clock: IN std_logic;
  		timp: OUT std_logic_vector(5 downto 0);
  		schimba_minutul: OUT std_logic
    );&#13;
END Numarator_secunde;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE TypeArchitecture OF Numarator_secunde IS&#13;
&#13;
BEGIN&#13;
&#13;Process(clock)
Variable tmp: std_logic_vector(5 downto 0):= "000000";
Begin
	if(rising_edge(clock)) then
		if(tmp="111010") then
			tmp:="000000";
			schimba_minutul&lt;='1';
		else
			tmp:=tmp+'1';
			schimba_minutul&lt;='0';
		end if;
	end if;
	timp&lt;=tmp;
End Process;
			
&#13;
END TypeArchitecture;&#13;
</vhdl>
  <vhdl name="Numarator_minute">LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_UNSIGNED.all;

ENTITY Numarator_minute IS
  PORT (
  		enable: IN std_logic;
  		clock: IN std_logic;
  		timp: OUT std_logic_vector(5 downto 0);
  		schimba_ora: OUT std_logic
    );
END Numarator_minute;

--------------------------------------------------------------------------------
--Complete your VHDL description below
--------------------------------------------------------------------------------

ARCHITECTURE TypeArchitecture OF Numarator_minute IS

BEGIN

Process(clock)
Variable tmp: std_logic_vector(5 downto 0):= "000000";
Begin
	if(rising_edge(clock) and enable='1') then
		if(tmp="111010") then
			tmp:="000000";
			schimba_ora&lt;='1';
		else
			tmp:=tmp+'1';
			schimba_ora&lt;='0';
		end if;
	end if;
	timp&lt;=tmp;
End Process;
			

END TypeArchitecture;
</vhdl>
  <vhdl name="Numarator_ore">LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_UNSIGNED.all;

ENTITY Numarator_ore IS
  PORT (
  		enable: IN std_logic;
  		clock: IN std_logic;
  		timp: OUT std_logic_vector(4 downto 0)
    );
END Numarator_ore;

--------------------------------------------------------------------------------
--Complete your VHDL description below
--------------------------------------------------------------------------------

ARCHITECTURE TypeArchitecture OF Numarator_ore IS

BEGIN

Process(clock)
Variable tmp: std_logic_vector(4 downto 0):= "00000";
Begin
	if(rising_edge(clock) and enable='1') then
		if(tmp="10111") then
			tmp:="00000";
		else
			tmp:=tmp+'1';
		end if;
	end if;
	timp&lt;=tmp;
End Process;
			

END TypeArchitecture;
</vhdl>
  <vhdl name="termostat">LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
use IEEE.numeric_std.all;
USE ieee.std_logic_UNSIGNED.all;
&#13;
ENTITY termostat IS&#13;
  PORT (&#13;
  	clock: IN std_logic;
  	ora: IN std_logic_vector(4 downto 0);
  	temperatura_actuala: IN std_logic_vector(4 downto 0);
  	temperatura_finala: OUT std_logic_vector(4 downto 0);
  	incalzire: OUT std_logic;
  	racire: OUT std_logic
  );&#13;
END termostat;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE TypeArchitecture OF termostat IS&#13;
	signal ora_baza10: integer;
&#13;	type tabel is array (0 to 23) of std_logic_vector(4 downto 0);
	constant temp_min: tabel:= ("10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000","10000");
	constant temp_max: tabel:= ("10110","10110","10110","10110","10110","10110","10110","10110","10110","10110","10110","10110","10110","10110","10110","10110","10110","10110","10110","10110","10110","10110","10110","10110");
BEGIN&#13;
ora_baza10 &lt;= to_integer(unsigned(ora));	
process(clock)
variable temperatura_auxiliara: std_logic_vector(4 downto 0):="01001";
begin
temperatura_finala &lt;= "01001";
     if(rising_edge(clock)) then 
	if(temperatura_actuala &lt; temp_min(ora_baza10)) then
		temperatura_auxiliara := temperatura_actuala+'1';
		incalzire &lt;='1';
		racire &lt;= '0';
	elsif(temperatura_actuala&gt;temp_max(ora_baza10)) then
		temperatura_auxiliara := temperatura_actuala-'1';
		incalzire &lt;='0';
		racire &lt;= '1';
	else incalzire &lt;= '0';
		racire &lt;= '0';
	end if;
	end if;
	temperatura_finala &lt;= temperatura_auxiliara;
End process;
&#13;
END TypeArchitecture;&#13;
</vhdl>
  <vhdl name="mux_8_la1">&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY mux_8_la1 IS&#13;
  PORT (&#13;
  		temp_initiala: IN std_logic_vector(4 downto 0);
  		temp_modificata: IN std_logic_vector(4 downto 0);
  		sel: IN std_logic;
  		temp_aleasa: OUT std_logic_vector(4 downto 0)
  );&#13;
END mux_8_la1;&#13;
&#13;

ARCHITECTURE TypeArchitecture OF mux_8_la1 IS&#13;
&#13;
BEGIN&#13;
	with sel select temp_aleasa&lt;= temp_initiala when '1',
							temp_modificata when others;
&#13;
END TypeArchitecture;&#13;
</vhdl>
  <vhdl name="comparator_2_nr">&#13;LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY comparator_2_nr IS&#13;
  PORT (&#13;
  	a,b:in std_logic_vector(4 downto 0);
  	egale:out std_logic
  );&#13;
END comparator_2_nr;&#13;
&#13;

ARCHITECTURE TypeArchitecture OF comparator_2_nr IS&#13;
&#13;
BEGIN&#13;
&#13;egale &lt;= (a(4) and b(4)) and (a(3) and b(3)) and (a(2) and b(2)) and (a(1) and b(1)) and (a(0) and b(0));
&#13;
END TypeArchitecture;&#13;
</vhdl>
  <vhdl name="Binary_to_decimal_converter">--------------------------------------------------------------------------------
-- Project :
-- File    :
-- Autor   :
-- Date    :
--
--------------------------------------------------------------------------------
-- Description :
--
--------------------------------------------------------------------------------

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;
USE ieee.std_logic_arith.all;

ENTITY Binary_to_decimal_converter IS
  PORT (
 Bin_num: in std_logic_vector(5 downto 0);
  		Unit: out std_logic_vector(3 downto 0);
  		Decimal: out std_logic_vector(3 downto 0)  
    );
END Binary_to_decimal_converter;

--------------------------------------------------------------------------------
--Complete your VHDL description below
--------------------------------------------------------------------------------

ARCHITECTURE comport OF Binary_to_decimal_converter IS

signal num_int: integer:=0;
signal u,z: integer:=0;
BEGIN

	num_int&lt;=conv_integer(bin_num);
	z&lt;=num_int / 10;
	u&lt;=num_int rem 10;
	process(u)
	begin
		case u is
		when 0 =&gt; unit &lt;= x"0";
		when 1 =&gt; unit &lt;= x"1";
		when 2 =&gt; unit &lt;= x"2";
		when 3 =&gt; unit &lt;= x"3";
		when 4 =&gt; unit &lt;= x"4";
		when 5 =&gt; unit &lt;= x"5";
		when 6 =&gt; unit &lt;= x"6";
		when 7 =&gt; unit &lt;= x"7";
		when 8 =&gt; unit &lt;= x"8";
		when 9 =&gt; unit &lt;= x"9";
		when others =&gt; unit &lt;=x"f";
		end case;
	end process;
	process(z)
	begin
		case z is
		when 0 =&gt; Decimal &lt;= x"0";
		when 1 =&gt; Decimal &lt;= x"1";
		when 2 =&gt; Decimal &lt;= x"2";
		when 3 =&gt; Decimal &lt;= x"3";
		when 4 =&gt; Decimal &lt;= x"4";
		when 5 =&gt; Decimal &lt;= x"5";
		when 6 =&gt; Decimal &lt;= x"6";
		when 7 =&gt; Decimal &lt;= x"7";
		when 8 =&gt; Decimal &lt;= x"8";
		when 9 =&gt; Decimal &lt;= x"9";
		when others =&gt; Decimal &lt;=x"f";
		end case;
	end process;
		 

	
END comport;</vhdl>
  <vhdl name="bcd">--------------------------------------------------------------------------------
-- Project :
-- File    :
-- Autor   :
-- Date    :
--
--------------------------------------------------------------------------------
-- Description :
--
--------------------------------------------------------------------------------

LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY bcd IS
  PORT (
  number: in std_logic_vector(3 downto 0);
  segment: out std_logic_vector(6 downto 0)
    );
END bcd;

--------------------------------------------------------------------------------
--Complete your VHDL description below
--------------------------------------------------------------------------------

ARCHITECTURE TypeArchitecture OF bcd IS

signal aux:std_logic_vector (6 downto 0);
BEGIN

with number select
 aux &lt;=
 "1111110" when x"0",
 "0110000" when x"1",
 "1101101" when x"2",
 "1111001" when x"3",
 "0110011" when x"4",
 "1011011" when x"5",
 "1011111" when x"6",
 "1110000" when x"7",
 "1111111" when x"8",
 "1111011" when x"9",
 "0000000" when others;
segment &lt;= aux;

END TypeArchitecture;</vhdl>
  <vhdl name="Binary_to_decimal_converter_5_biti">--------------------------------------------------------------------------------
-- Project :
-- File    :
-- Autor   :
-- Date    :
--
--------------------------------------------------------------------------------
-- Description :
--
--------------------------------------------------------------------------------

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;
USE ieee.std_logic_arith.all;

ENTITY Binary_to_decimal_converter_5_biti IS
  PORT (
 Bin_num: in std_logic_vector(4 downto 0);
  		Unit: out std_logic_vector(3 downto 0);
  		Decimal: out std_logic_vector(3 downto 0)  
    );
END Binary_to_decimal_converter_5_biti;

--------------------------------------------------------------------------------
--Complete your VHDL description below
--------------------------------------------------------------------------------

ARCHITECTURE comport OF Binary_to_decimal_converter_5_biti IS

signal num_int: integer:=0;
signal u,z: integer:=0;
BEGIN

	num_int&lt;=conv_integer(bin_num);
	z&lt;=num_int / 10;
	u&lt;=num_int rem 10;
	process(u)
	begin
		case u is
		when 0 =&gt; unit &lt;= x"0";
		when 1 =&gt; unit &lt;= x"1";
		when 2 =&gt; unit &lt;= x"2";
		when 3 =&gt; unit &lt;= x"3";
		when 4 =&gt; unit &lt;= x"4";
		when 5 =&gt; unit &lt;= x"5";
		when 6 =&gt; unit &lt;= x"6";
		when 7 =&gt; unit &lt;= x"7";
		when 8 =&gt; unit &lt;= x"8";
		when 9 =&gt; unit &lt;= x"9";
		when others =&gt; unit &lt;=x"f";
		end case;
	end process;
	process(z)
	begin
		case z is
		when 0 =&gt; Decimal &lt;= x"0";
		when 1 =&gt; Decimal &lt;= x"1";
		when 2 =&gt; Decimal &lt;= x"2";
		when 3 =&gt; Decimal &lt;= x"3";
		when 4 =&gt; Decimal &lt;= x"4";
		when 5 =&gt; Decimal &lt;= x"5";
		when 6 =&gt; Decimal &lt;= x"6";
		when 7 =&gt; Decimal &lt;= x"7";
		when 8 =&gt; Decimal &lt;= x"8";
		when 9 =&gt; Decimal &lt;= x"9";
		when others =&gt; Decimal &lt;=x"f";
		end case;
	end process;
		 

	
END comport;</vhdl>
  <vhdl name="Freq_Divider">LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY Freq_Divider IS
 --divides from 100 MHz to 1 Hz; 100 MHz = 100.000.000 Hz
  PORT (
  
	clock: IN std_logic;
  	divided_clock: OUT std_logic
    );
END Freq_Divider;

ARCHITECTURE TypeArchitecture OF Freq_Divider IS

signal count: INTEGER := 1;
signal newClock: std_logic;

BEGIN
divided_clock &lt;= newClock;
process(clock)
begin
	if(rising_edge(clock)) then
		if count&lt;49999999 then 
		  count&lt;=count +1;
		elsif count = 49999999 then
		  count &lt;= 0;
	      newClock &lt;= not newClock;
	    end if;
	end if;
		
end process;

END TypeArchitecture;</vhdl>
</project>
